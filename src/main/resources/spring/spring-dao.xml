<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 配置整合 Mybatis 过程 -->
    <!-- 1.配置数据库相关参数 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 2.配置数据源连接池：C3P0-->
    <bean id="dataSource"
          class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>

        <!-- c3p0连接池的私有属性 -->
        <property name="maxPoolSize" value="30"/>    <!--默认15，标示连接池最多保有30个数据库连接-->
        <property name="minPoolSize" value="10"/>    <!-- 默认3 -->
        <!-- 关闭连接后不能自动commit -->
        <property name="autoCommitOnClose" value="false"/>  <!-- 默认就是false，当close时不要commit -->
        <!-- 获取链接超时时间 -->
        <property name="checkoutTimeout" value="1000"/>    <!-- 默认0，表示当达到maxPoolSize最大数量连接时，会无限等待直到有可用链接为止。设为1000让用户请求的线程释放掉，而不是僵死在 -->
        <!-- 当获取链接失败重试次数 -->
        <property name="acquireRetryAttempts" value="2"/>

    </bean>


    <!-- 以下是 Mybatis 和 Spring 整合的配置 -->
    <!--3. 配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 加载 mybatis 全局配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/> <!-- Maven项目里classpath:代表着main/java文件夹和main/resources文件夹 -->

        <!-- 以下配置文件在不与spring一起用时都放在 mybatis 全部配置文件里 -->
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 扫描ntity包，设置别名 -->
        <property name="typeAliasesPackage" value="com.csranger.entity" />
        <!-- 以下配置依然可以放到Mybatis配置文件中，settings只能放到Mybatis配置文件里 -->
        <!-- 告诉 Mybatis mapper文件位置 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml" />
    </bean>

    <!-- 4. 扫描 dao 接口包，动态实现 dao 接口，并注入到spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入 sqlSessionFactory：sqlSessionFactory这个对象作为MapperScannerConfigurer类对象的sqlSessionFactoryBeanName成员变量的实际值 -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/> <!-- value是3的id名 -->
        <!-- 扫描 dao 接口包，为接口实现类，并注入spring容器中 -->
        <property name="basePackage" value="com.csranger.dao"/>
    </bean>


</beans>